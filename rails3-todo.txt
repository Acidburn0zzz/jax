Jax should seamlessly integrate with Rails generators. Examples:

rails g scaffold main_menu
  app/controllers/main_menu_controller.rb
  app/helpers/main_menu_helper.rb
  app/models/main_menu.rb
  app/assets/javascripts/main_menu.js
  app/assets/javascripts/jax/controllers/main_menu_controller.js
  app/assets/javascripts/jax/models/main_menu.js
  app/assets/javascripts/jax/resources/main_menus.js.erb
  app/assets/stylesheets/main_menu.css
  spec/jax/controllers/main_menu_controller_spec.js
  spec/jax/models/main_menu_spec.js

The +main_menu.js+ file, automatically generated by Rails, should be modified to include
all Jax code.

##

ActiveRecord models should act in place of Jax resource files. Jax should produce an additional file for each
ActiveRecord model generated:

  app/assets/javascripts/jax/resources/main_menus.js.erb

The file by default would look like:

  <%# By default, all Main Menus will be loaded into Jax %>
  <% MainMenu.all.each do |main_menu| %>
    MainMenu.addResource(<%= main_menu.to_json %>);
  <% end %>

##

Jax built-in shaders and all Jax source code should be served directly from the Jax gem. No more dist/jax.js.
(Note: for non-rails applications, Jax can generate dist/jax.js during project generation.) Shaders can be
overridden by simply creating them within the Rails app's default assets path.

##

Shader manifest.yml file should be replaced with a Ruby counterpart, which should live in app/models/shaders.
Shader glsl files should be put in lib/assets.
Shader generation would now look like:

  rails g shader (or jax:shader) clouds
    lib/assets/shaders/clouds/fragment.glsl.erb
    lib/assets/shaders/clouds/common.glsl.erb
    lib/assets/shaders/clouds/vertex.glsl.erb
    app/models/shaders/clouds.rb
    spec/shaders/clouds_spec.js

##

Rails controller views should automatically include <canvas/> element. Its id would default to "controller_action",
ex:

  <canvas id="main_menu_index" width="640" height="480" />

Additionally, the default JS file generated for the controller at app/assets/javascripts/controller.js would have
code added to it to start the Jax context. It would also resize the +width+ and +height+ properties to maintain
an aspect ratio against CSS styling. Code would look a little like:

  $(document).ready(function() {
    var context = new Jax.Context("main_menu_index", {maintain_aspect_ratio:true});
  });

##

Jax plugins should live in vendor/jax/plugins/ instead of just vendor/plugins/:

##

The `jax package` command should simply puke out a message instructing the user to run Rails' `rake assets:precompile`
command instead.

Note: Jax may need to add the built-in shaders and jax.js to +config.assets.precompile+:

  config.assets.precompile += [ 'jax.js', 'builtin/app/shaders/**/*.js' ]

##

Jax no longer needs to worry about minifying at all. Minified Jax has been suspended due to debugging issues and
a paradigm shift: it is the user's responsibility to minify their JS code when they are ready to do so. Now, Rails
will minify JS as needed and should theoretically include Jax files automagically.

##

Jax shader preprocessors should be moved Ruby-side, using Sprockets 2 and Tilt.

-- Partially implemented. Shader preprocessors do operate using Sprockets, but the previous JavaScript code
   is also still in place.

##

