<html>
<head>
  <script type="text/javascript" src="/__root__/dist/jax.js"></script>
  <script type="text/javascript">
    Jax.environment = Jax.PRODUCTION;
    
    // shaders
    Jax.shaders['basic'] = new Jax.Shader({  common:"shared uniform mat4 ivMatrix, mvMatrix, pMatrix, vMatrix;\nshared uniform mat3 vnMatrix, nMatrix;\n\nshared uniform vec4 materialDiffuse, materialAmbient, materialSpecular;\nshared uniform float materialShininess;\n\nshared uniform int PASS_TYPE;\n\nshared varying vec2 vTexCoords;\nshared varying vec3 vNormal, vSurfacePos;\nshared varying vec4 vBaseColor;\n",
      fragment:"void main(void) {\n  gl_FragColor = vBaseColor;\n}\n",
      vertex:"shared attribute vec2 VERTEX_TEXCOORDS;\nshared attribute vec3 VERTEX_NORMAL;\nshared attribute vec4 VERTEX_POSITION, VERTEX_COLOR, VERTEX_TANGENT;\n\nvoid main(void) {\n  vBaseColor = VERTEX_COLOR;\n  vNormal = nMatrix * VERTEX_NORMAL;\n  vTexCoords = VERTEX_TEXCOORDS;\n                          \n  vSurfacePos = (mvMatrix * VERTEX_POSITION).xyz;\n\n  gl_Position = pMatrix * mvMatrix * VERTEX_POSITION;\n}\n",
    exports: {},
    name: "basic"});
  
    // controllers
    var BenchmarkController = Jax.Controller.create("benchmark", {
      index: function() {
        this.context.glCullFace(GL_BACK);
        this.context.glEnable(GL_CULL_FACE);

        this.cubes = [];
        var count = document.getElementById('benchmark-object-count').value;
        var maxz = count / 20;
        for (var i = 0; i < count; i++) {
          var z = parseInt(i / 20), x = ((i % 20) % 5), y = parseInt((i % 20) / 5);
          var color = [1-z/maxz,x / 5,(y / 5) * 0.75 + 0.25,0.85];
          var cube = new Jax.Model({
            mesh: new Jax.Mesh.Cube({size:0.5,color:color}),
            position: [x - 2.0, y - 1.5, -(maxz-z)],
            angle: vec3.normalize([Math.random(), Math.random(), Math.random()])
          });
          this.world.addObject(cube);
          this.cubes.push(cube);
        }
        this.player.camera.setPosition(0,0,3);
      },
      
      update: function(timechange) {
        var amount = timechange;
        for (var i = 0; i < this.cubes.length; i++) {
          this.cubes[i].camera.rotate(amount, this.cubes[i].angle);
        }
      }
    });
    
    // views
    Jax.views.push('benchmark/index', function() {
      this.glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
      this.world.render();
    });
    
    Jax.routes.map("benchmark/index", BenchmarkController, 'index');
    
    function startBenchmark() {
      document.getElementById('result').style.display = "none";
      document.getElementById('framerate').style.display = "block";
      document.getElementById('start-button').disabled = true;
      var benchmark = {start: new Date(),avg_fps:0,fps_count:0,fps_iters:0};
      var jax = new Jax.Context("benchmark-canvas");
      jax.redirectTo("benchmark/index");
      var fpscounter = setInterval(function() {
        var fps = jax.getFramesPerSecond();
        if (fps == 0 || !isFinite(fps) || isNaN(fps)) return;
        benchmark.fps_count += fps;
        benchmark.fps_iters++;
        benchmark.avg_fps = benchmark.fps_count / benchmark.fps_iters;
        document.getElementById('fps').innerHTML = fps;
      }, 250);
      
      setTimeout(function() {
        jax.dispose();
        clearInterval(fpscounter);
        benchmark.stop = new Date();

        document.getElementById('start-button').disabled = false;
        document.getElementById('result').style.display = "block";
        document.getElementById('framerate').style.display = "none";
        result = new EJS({text:"Duration: <%=(stop-start)/1000%>sec<br/>Average framerate: <%=avg_fps%>"});
        document.getElementById('result').innerHTML = result.render(benchmark);
      }, parseInt(document.getElementById('benchmark-duration').value) * 1000);
    }
  </script>
</head>
<body>
  <div id="result" style="display:none;"></div>
  <div id="framerate" style="display:none;">FPS: <span id="fps">Calculating...</span></div>
  <canvas id="benchmark-canvas" width="400" height="300"></canvas>
  <div>
    Benchmark duration (in seconds): <input id="benchmark-duration" value="10" /><br/>
    Object count: <input id="benchmark-object-count" value="20" /><br/>
    <input type="button" id="start-button" value="Start Benchmark" onclick="startBenchmark();return false;" />
  </div>
</body>
</html>