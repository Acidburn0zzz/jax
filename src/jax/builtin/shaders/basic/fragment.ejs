void main(void) {
  vec4 ambient = vec4(0), diffuse = vec4(0), specular = vec4(0);
  
  vec3 nNormal = normalize(vNormal);

  if (LIGHT.type == <%=Jax.DIRECTIONAL_LIGHT%>)
    DirectionalLight(LIGHT, nNormal, ambient, diffuse, specular);
  else
    if (LIGHT.type == <%=Jax.POINT_LIGHT%>)
      if (LIGHT.constant_attenuation == 1.0 && LIGHT.linear_attenuation == 0.0 && LIGHT.quadratic_attenuation == 0.0)
        PointLightWithoutAttenuation(LIGHT, vSurfacePos, vNormal, ambient, diffuse, specular);
      else
        PointLightWithAttenuation(LIGHT, vSurfacePos, vNormal, ambient, diffuse, specular);
  else
    if (LIGHT.type == <%=Jax.SPOT_LIGHT%>)
      SpotLight(LIGHT, vSurfacePos, vNormal, ambient, diffuse, specular);
  else
  { // error condition, output 100% red
    gl_FragColor = vec4(1,0,0,1);
    return;
  }
  

  vec4 final_color = ambient  * materialAmbient  * vBaseColor +
                     diffuse  * materialDiffuse  * vBaseColor +
                     specular * materialSpecular * vBaseColor;

  export(vec4, ambient);
  export(vec4, diffuse);
  export(vec4, specular);
  export(vec4, FragColor, final_color);
  
  gl_FragColor = final_color;
}
